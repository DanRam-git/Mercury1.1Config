[mcu]
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_260057000A51303432383339-if00
restart_method: command
##--------------------------------------------------------------------
[include mainsail.cfg]
[exclude_object]
[include config_backup.cfg]

[printer]
kinematics: corexy
max_velocity:800  
max_accel: 10000             #Max 4000
max_z_velocity: 10      #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 300
square_corner_velocity: 5.0

[force_move]
enable_force_move: True

#[gcode_macro FAKE_POSITION]
#gcode:
#        SET_KINEMATIC_POSITION X=0 Y=0 Z=100

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

#description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = 180 %}
    # Heat bed for probing
    M190 S{BED_TEMP}
    M109 S{EXTRUDER_TEMP}
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    
    # If you are using Z-Tilt:
    Z_TILT_ADJUST

    # Move the nozzle near the bed
    G1 Z5 F3000
        # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Wait for bed to reach temperature

    # Set and wait for nozzle to reach printing temperature
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    M109 S{EXTRUDER_TEMP}
    
    #Cooling Fan 
    #M106 S255
    #Start printing!
        
[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0

    SET_FAN_SPEED FAN=Fan SPEED=0
    # Move nozzle away from print while retracting
    G91
     # Raise nozzle by 10mm
    G1 Z10 F3000
    G28 x 
    G28 y
    #G1 X-2 Y-2 E-3 F300
    G90
    # Disable steppers
    M84

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  A Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_y]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^PG6


position_endstop: -24
position_min: -24
position_max: 360

homing_speed: 100 #Max 100
homing_retract_dist: 5
#homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC4
#diag_pin: PG6
interpolate: False
run_current: 1.4
hold_current: 0.2
sense_resistor: .11
stealthchop_threshold: 0 #999999
#driver_SGTHRS: 45

#--------------------------------------------------------------------

##  B Stepper - Right
##  Connected to MOTOR_1

[stepper_x]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^PG12

position_endstop: -19.0
position_min: -19.0
position_max: 370

homing_speed: 100  #Max 100
homing_retract_dist: 5
#homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PD11
#diag_pin: PG9
interpolate: False
run_current: 1.4
hold_current: 0.2
sense_resistor: .11
stealthchop_threshold: 0 #999999
driver_SGTHRS: 60

#####################################################################
#   Z Stepper Settings
#####################################################################


##  Connected to MOTOR_2

[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 2
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper


endstop_pin: probe:z_virtual_endstop # use beacon as virtual endstop
position_max: 360


homing_speed: 10 #Max 100
homing_retract_dist: 0.02
#homing_positive_dir: true

[tmc2209 stepper_z]
uart_pin: PC6
#diag_pin: PG10
interpolate: False
run_current: 0.8
hold_current: 0.02
sense_resistor: .11
stealthchop_threshold: 999999


[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 2
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper

[tmc2209 stepper_z1]
uart_pin: PC7
#diag_pin: PG10
interpolate: False
run_current: 0.8
hold_current: 0.02
sense_resistor: .11
stealthchop_threshold: 999999


[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 2
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper

[tmc2209 stepper_z2]
uart_pin: PF2
#diag_pin: PG10
interpolate: False
run_current: 0.8
hold_current: 0.02
sense_resistor: .11
stealthchop_threshold: 999999




#-----------------------------------------------PROBE---------------------------------------


[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_3C3A54B75154354D38202020FF0A1F26-if00
x_offset: 0 # update with offset from nozzle on your machine
y_offset: -30 # update with offset from nozzle on your machine

contact_max_hotend_temperature: 230 # increase to probe at print temps

home_xy_position: 185, 180 # update with your safe position
home_z_hop: 5
home_z_hop_speed: 10
home_xy_move_speed: 100
home_method: contact # use proximity for induction homing
home_method_when_homed: proximity # after initial calibration use induction
home_autocalibrate: unhomed # contact will calibrate beacon on first home

trigger_distance: 3
accel_scale: 12g
mesh_main_direction: x
mesh_runs: 2

[bed_mesh]
algorithm: bicubic
speed: 150
horizontal_move_z: 5
zero_reference_position: 185, 180
mesh_min: 0, 0
mesh_max: 370, 350
probe_count: 37, 36

[z_tilt]
z_positions:
  185,  10 
  13.5, 350 
  356.5, 350 
points:
  185,   40 
  13.5,  360 
  356.5, 360 
speed: 100
horizontal_move_z: 10
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 3
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.0050

[resonance_tester]
accel_chip: beacon
probe_points: 185, 180, 5

#-----------------------------------------------EXTRUDER---------------------------------------

[extruder]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
microsteps: 16
rotation_distance: 47.088
full_steps_per_rotation: 200
gear_ratio:9:1
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF4

min_temp: 10
max_temp: 300
pressure_advance: 0.025
max_extrude_cross_section: 2.5

#max_extrude_only_velocity:
#max_extrude_only_accel:
max_power: .9

[tmc2209 extruder]
uart_pin: PE4
#diag_pin: PG10
interpolate: False
run_current: 0.8
hold_current: 0.1
#sense_resistor: .11
stealthchop_threshold: 999999

[heater_fan heatbreak_cooling_fan]
pin: PD14
max_power: 1.0
shutdown_speed:0.0
cycle_time: 0.010
hardware_pwm: False
kick_start_time: 0.100
off_below: 0.2
heater: extruder
heater_temp: 50.0 #(in Celsius)
fan_speed: 1.0

#---------------------------------------input_shaper-------------------------------------------

[input_shaper]
#shaper_freq_x: 31.2
#shaper_type_x: mzv
#shaper_freq_y: 30.0
#shaper_type_y: ei

#damping_ratio_x: 0.1
#damping_ratio_y: 0.1
#   Damping ratios of vibrations of X and Y axes used by input shapers
#   to improve vibration suppression. Default value is 0.1 which is a
#   good all-round value for most printers. In most circumstances this
#   parameter requires no tuning and should not be changed.
   
#-----------------------------------------------Bed---------------------------------------

[heater_bed]
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PF3


#control: watermark
min_temp: 0
max_temp: 100
#   See the "extruder" section for a description of the above parameters.


#-----------------------------------------------Fans---------------------------------------
[fan]
pin: PD15
max_power: 1.0

#[fan_generic fan3]
#pin: PD13
#max_power: 1.0

[controller_fan driver_fan0]
pin: PA8
max_power: 1.0
shutdown_speed: 1.0
fan_speed: .6
idle_timeout: 240
idle_speed:.5
stepper: stepper_y,stepper_x,stepper_z, stepper_z1, stepper_z2, extruder

[controller_fan driver_fan1]
pin: PE5
max_power: 1.0
shutdown_speed: 1.0
fan_speed: .6
idle_timeout: 240
idle_speed:.5
stepper: stepper_y,stepper_x,stepper_z, stepper_z1, stepper_z2, extruder

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [beacon model default]
#*# model_coef = 1.5156315930950408,
#*# 	1.8501783811017545,
#*# 	0.8064331752164281,
#*# 	0.26177598388531526,
#*# 	0.214679744967241,
#*# 	0.44975399807992134,
#*# 	-0.01452627185744714,
#*# 	-0.48386692993084846,
#*# 	0.07557191081591938,
#*# 	0.3260838979958003
#*# model_domain = 1.836177820580683e-07,1.9406933467702942e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 23.342475
#*# model_offset = 0.00000
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 31.076
#*# pid_ki = 7.399
#*# pid_kd = 32.630
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 45.026
#*# pid_ki = 1.191
#*# pid_kd = 425.494
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 45.4
#*# shaper_type_y = 3hump_ei
#*# shaper_freq_y = 60.4
